/*
 * meatplatform-sandbox
 * Distributed under CC BY-NC-SA
 */
apply from: "$project.rootDir/gradle/scripts/testFailAggregation.gradle"

ext {
    // Export settings (프로젝트 모듈 외부 export 시 버전명)
    version_app_server = "1.0.0"

    // Project 내부에서 사용
    APP_SERVER = "app-server"
}

tasks.register("cleanAll")
tasks.register("detektAll")
tasks.register("testAll")

subprojects { pr ->
    cleanAll.dependsOn("${pr.path}:clean")
    detektAll.dependsOn("${pr.path}:detekt")
    testAll.dependsOn("${pr.path}:test")
}


// compileJava -> processResources -> classes 순으로 gradle task 실행
processResources.doFirst {
    String version = getGitTag()
    if (version.isEmpty()) {
        version = "${project.version}+${determineBuildNumber()}"
    }

    // Write JSON as resources
    final json = groovy.json.JsonOutput.toJson([
            "version"    : version,
            "fingerprint": getGitSha(),
            "profile"    : getBuildConfig(),
    ])
    final mainResourcesDir = new File(project.projectDir, "src/main/resources")
    if (!mainResourcesDir.exists()) {
        mainResourcesDir.mkdirs()
    }
    new File(mainResourcesDir, "build_${rootProject.name}-${project.name}.json").write(json)

    // Overrides version before JAR packaging
    project.version = version
    println("Project version has been overriden to ${project.version}")
}
